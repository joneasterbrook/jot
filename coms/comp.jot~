%Compare two similar buffers - typically they are different versions of the same file.

%%
%%Copyright (C) 2013-2018 Jon. Easterbrook
%%This programme, it's associated scripts and documentation is free software.
%%It is distributed in case someone might find it useful,
%%it can be modified and redistributed without restriction.
%%No warrenty is given or implied for whatever purpose.
%%

%g?
Usage:
> comp <key>{f2}  -- Compares current buffer with the nominated buffer.
or
> comp{f2}  -- Compares current buffer, must be a file image with it's 
               pathname set,  with the current version of the file.
or
> comp -backup[ date/time stamp>]{f2}  -- Compares current buffer with the 
               latest/[or specified] backup version of the file.
  
  Arg1 - the 'ref' buffer to be compared with the current buffer (the current
  buffer at the time the comp script was run).
   
  If arg1 unspecified then the file is compared with the  current  version  of
  itself in buffer ';' if buffer '; currently has a  copy  of  that  file  and
  we're not at the end of the file then comparison continues.
  
  Numeric-keypad-keys 4 and 5 (and buffers 4 and 5)  perform  comparison  5  -
  forwards, and 4 backwards from  lines,  comp  only  ever  comperes  complete
  lines. Comparison normally begins with the current line of the 'current' and
  the current line of the 'ref'  buffer.  If  the  current  character  of  the
  'current' buffer buffer is at the end of the line then comparison begins  at
  next line. Similarly for the reverse comparison, if the current buffer is at
  the end of the line then comparison starts at the previous line.
  
  In the event of a failure both lines are printed, and the current  character
  in the 'current' buffer is left at the end of the failing line. Pressing the
  comparison button again will continue with the next line - or previous  line
  for reverse comparison.
  
  To skip the current lines in both buffers, e.g. after a failure,  place  the
  cursor at the end of the reference buffer.
  
  Pressing the 1 button on the  numeric  keypad,  with  no  arguments,  causes
  comparison to continue.
  
  Pressing 5 with an argument causes the argument to be taken as a command, to
  be applied to both buffers.
  
  Buffer usage: 
    $ - Command picked up from button  1  argument,  to  be  applied  to  both
        comarison buffers. Also used as a temporary format string when setting
        up the buffers.
    @ - temporary, used at setup time only. directory list and format string
    ! - The reference buffer is comparing to filing-ststem version.
    4 - The reverse-comparison macro.
    5 - The forwards-comparison macro.

:

%%Setup
%g#
%%Extract buffer key.
obz$m-0(v/ /r)0
  
t( %%Check for optional parameters.
  r\ %%No buffer key or qualifiers - set buffer to ! and read the current version.
  r-0e0i/!/ o#ozm-0 %i!=;
, r\ %%A single-character value given - assumed to be a buffer key.
, %%More than one character value - is it the -backup qualifier?
  ( v/-backup/f1/ / (v/ /r)0
    %q@=buffer; f/pathname = /-br0f-1./.b-
    %q!=dir '@/backup;
    %%Extract only backups of current buffer.
    m2(v'@m,k)0
    ( %%Was backup version specified?
      z$r  %%Yes - take specified version.
      r-b z!m-0m2(f1'$m,k)0
    , %%No backup version specified - select most recent version.
      z!m-0e4n.r0a@ k(rr-h@i./.m)0 %b=sort; m0 m-k-0 )
  , %%Not a single-character buffer key or a valid qualifier.
    z? %x=Error: invalid qualifier "'$"; ) )
%%%%Set up stack.
%%i-/z/n.r2a@'@
:
'#

%g5
z$(rr-
  %%command is given execute it in both buffers.
  ( z<bufferA>'$ )? (z<bufferB>'$ )?
, %%No command argument given - compare normally.
  %%
  %%If cursor is at the end of a line then skip to the next line in both buffers.
  z<bufferB>(rr-, mz<bufferA>mz<bufferB>)
  %%
  %%Test each line.
  z<bufferA> (v'<bufferB>r0v-'<bufferB>(mz<bufferB>m, ?\) z<bufferA>)0
  %%
  %%Failure detected - print both lines.
  z<bufferA>r-0p z<bufferB>r-0pr0 )
:

%g4
z$(rr-
  %%command is given execute it in both buffers.
  ( z<bufferA>'$ )? (z<bufferB>'$ )?
, %%No command argument given - compare normally.
  %%
  %%If cursor is at the end of a line then skip to the previous line in both buffers.
  z<bufferB>(rr-, m-z<bufferA>m-z<bufferB>)
  %%
  %%Test each line.
  z<bufferA> (v'<bufferB>r0v-'<bufferB>(m-z<bufferB>m-, ?\) z<bufferA>)0
  %%
  %%Failure detected - print both lines.
  z<bufferA>r-0p z<bufferB>r-0pr0 )
:

%%Add commands to set up stack with original buffer and $ with original compare buffer.
%d$=%c
ob
z5m-0(f/<bufferA>/o#oo'$)0osm-0 (f/<bufferB>/o#oo'$)0 os
z4m-0(f/<bufferA>/o#oo'$)0osm-0 (f/<bufferB>/o#oo'$)0 os
ok
%%Check that the buffers are different.
m-0(v/  z/\m)0r3n.ra$h$m(v/  z/\m)0r3
(v'$ z$r-0i/%x=Refrerence and comparison buffers are the same - /oz'$, )
n.a$oz

'5
