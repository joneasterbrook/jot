obz^m-0i/q       %s=trace 0/oz
%w 20; %w 0;







%%recovers a crashed editor session using journal files.
%% 
%%History.

%%
%%Copyright (C) 2013-2018 Jon. Easterbrook
%%This programme, it's associated scripts and documentation is free software.
%%It is distributed in case someone might find it useful,
%%it can be modified and redistributed without restriction.
%%No warrenty is given or implied for whatever purpose.
%%

%g? 
  Usage:
    Restart the editor with -init=%r=journal_recover
    It picks up the journal file using the pathname of the primary file - <primaryPathName>.jnl/history.txt
    A copy of the primary file and any modified secondaries is in the same directory.
    
  For simple cases the following procedure should be sufficient:
    jot <originalPrimaryFile> -init="%r=journal_recover"
  then
    jot <originalPrimaryFile> -init="%r=./recover_now.jot -asConsole"
  It may be necessary to edit the ./recover_now.jot script - especially if the original failure was due 
  to operator error, then you will need to remove the faulty commands from the script before running it. 
    
  Buffers, original contents of these are held in the ^ buffer while this script extracts the next command.:
    j - The history.txt file
    c - the current key code or escape sequence from history
    t - the hotkey/escape sequence translation from the ^ buffer.
    o - the recovery script.
    p - the journal-directory path.
    n - the Ctrl+C command count.
:

%g#
%%Main recovery macro.
%%
%%Check for readonly buffers etc - remove all locks.
ob %q~=system; f/Buffers:/m 
%%Buffer loop - reset write lock etc on all buffers.
( f1/ Buffer /- q/a-z/m, oicoz %b=unrestricted; z~m)0 osozok
 
%%Pick up pathName for primary.
%q~=buffer; f/pathName = /-n.r0ap&zpr0i".jnl/"
%%Read the history file.
z. (%ij='p/history.txt;, %x=Cannot open history file 'p/history.txt - giving up now; )
%%Add a dummy keycode for simple typed-in commands.
z^m0r0b-i/        /
%%Clear out the output buffer.
%qo=date
ki/%%Recovery file generated by journal_recover.jot, run date /r0b
zj %q~=buffer; f/pathname = /-e-0i/%%Using history file /m-k-0 f/currentDatestamp = /-e-0j-i/ dated / zoi'~ okb
%q$=date; mzoi/%%Recovery script ran at /i'$b
i/ob/b zjm-0

%%Read the copy of the original primary file from the using the specified path, since this is an explicit re-read, redefine the name too.
zjm-0f/<<Primary file /-n.f1/>>/a$& mf1/<<Recovery pathname: /- n.r(f1/ /, f1/>>/)ac&zcr-0i/%i.=/ r0i/;  %b=pathname /h$i/;/ zohcb
  
%%Disable I/O.
i"%s=recoverymode 1"b
 
%%Check that we're being run as -startup=recover and no -init commands specified.
ob%q$=system; (f/Initialization commands = /-r\ f/ Startup script = /-v/recover/r0v-//oz, %x=Error: recovery must be run as a -startup=recover, with no -init commands.;)
%%Check that the xterm height is the same - *very* important if there are any PageUp or PageDown operations in the session.
ob (zjm-0f/<<Screen height /-oid f1/Guard band size /-oid, %X=Error in Screen-height entry in history file.; ) m
oso# %q~=window; f/ screenHeight = /-oidzjosok (o=, %X=Original screen height was '~ - you must adjust your xterm to match, then try again.;, ) okok osoz
%%Add instruction to set the guardband.
zoi/%s=guardband /i'~ b

%%Do the startup
zjf/<<Startup script>>/m zoi/%%Re-run the startup script from the journal area./b i/%r=startup;/b

( %%Main loop - translate history into a recovery script. 
  %%Pick up the keycode and the string argument.
  zj n.r0ac&m
  ( %%Is this a readFile operation, a keycode or some text?
    %%Comment out failed reads.
    zcv/<<Read file failed>>/ i.//.zom-r-0i.//.m, 
    %%Comment out invalid commands.
    zcv/<InvalidCommand>/ i/%%/zom-k,
    %%Pass original %i and %e commands, also pass the primary file, actual pathnames will be modified with %s=recoverymode 1 set.
    zcr-0f1/<<Recovery pathname: /-e-0 (f1/ to buffer /, f1/>>/)e0 zohc b,
    %%Remove the startup-end mark and add commands to insert escape sequence for emulation of Backspace and Enter keys. 
    zcv/<<Startup Sequence ends,/
%%      zoi"obz^m-0i/<<DEL>> i`## `e-(e-, j-)/b"b  i"  i/<<INS>> i`## `e-/b"b  i"  i/<<BRK>> i`## `e-b/b oz"b
      %%Add a few recovery-specific translations to the escape-sequence-translation buffer.
      zoi"obz^m-0i/<<DEL>> i`## `e-(e-, j-)/b  i/<<INS>> i`## `e-/b  i/<<BRK>> i`## `e-b/b oz"b
      %%The -init commands can go in now.
      zjm-0(f/<<Init commands follow>>/mn.r0ac& zoi/%%These are the -init commands./b hcb, ) zjm-0f/<<Startup Sequence ends/m,
    %%Remove command-file calls.
    f1/<<Running script /,
    %%Suppress <Esc I> - we don't need screen-enter mode and it just make life too confusing.
    zc(v/I       /\v/i       /\)\ zoi/%%<<InsertMode>> suppressed/b, 
    %% <<INT>> often used to exit G command and also to exit trace mode - check the next line.
    zcv/<<INT / zj(v/<<G-command terminated>>/mzci/:/bi/m-/bei/%%/r0b, zcr7n.f1/>>/an&zom-b-i/%s=commandcounter /hni/;/m2n.ac)zohc,
    %% <<Debugger on/off>> events.
    zcv/<<Debugger / f1/ /-(v/on>>/zom-i/%s=tracedefault +40;/bm, v/off>>/zoi/%s=tracedefault -40;/b), 
    %%Exit now if we're looking at a secondhand history file (i.e. the session has been restored and crashed again - later versions of restore.jot will have to deal with these.
    v/<<Recovery session pid /\
    %%Anything else passes straight through.
    zohcb )
  )0
  
:
'#
 
zo 
i/%%Re-enable file writing./b
i/%s=recoverymode 0/b
%b=pathname ./recover_now.jot
%o
  
%%Final tidy up before recovery.
%q~=system; f/Buffers:/ (z~mf1/  buffer /- (v/$/, oic n.a$z$oo/n.a%c/ '$))0
z.n.a$
o@
%%Clear out all buffers before restarting.
%r=freeall

%%Do it.
%r=./recover_now.jot -asConsole;

